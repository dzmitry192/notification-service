/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.innowise.sivachenko.kafka.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class NotificationRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1523604022578148999L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NotificationRequest\",\"namespace\":\"com.innowise.sivachenko.kafka.avro\",\"fields\":[{\"name\":\"email\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"subject\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"message\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"createdAt\",\"type\":\"long\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<NotificationRequest> ENCODER =
      new BinaryMessageEncoder<NotificationRequest>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<NotificationRequest> DECODER =
      new BinaryMessageDecoder<NotificationRequest>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<NotificationRequest> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<NotificationRequest> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<NotificationRequest> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<NotificationRequest>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this NotificationRequest to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a NotificationRequest from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a NotificationRequest instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static NotificationRequest fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String email;
  private java.lang.String subject;
  private java.lang.String message;
  private long createdAt;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public NotificationRequest() {}

  /**
   * All-args constructor.
   * @param email The new value for email
   * @param subject The new value for subject
   * @param message The new value for message
   * @param createdAt The new value for createdAt
   */
  public NotificationRequest(java.lang.String email, java.lang.String subject, java.lang.String message, java.lang.Long createdAt) {
    this.email = email;
    this.subject = subject;
    this.message = message;
    this.createdAt = createdAt;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return email;
    case 1: return subject;
    case 2: return message;
    case 3: return createdAt;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: email = value$ != null ? value$.toString() : null; break;
    case 1: subject = value$ != null ? value$.toString() : null; break;
    case 2: message = value$ != null ? value$.toString() : null; break;
    case 3: createdAt = (java.lang.Long)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.String getEmail() {
    return email;
  }


  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.String value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'subject' field.
   * @return The value of the 'subject' field.
   */
  public java.lang.String getSubject() {
    return subject;
  }


  /**
   * Sets the value of the 'subject' field.
   * @param value the value to set.
   */
  public void setSubject(java.lang.String value) {
    this.subject = value;
  }

  /**
   * Gets the value of the 'message' field.
   * @return The value of the 'message' field.
   */
  public java.lang.String getMessage() {
    return message;
  }


  /**
   * Sets the value of the 'message' field.
   * @param value the value to set.
   */
  public void setMessage(java.lang.String value) {
    this.message = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public long getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(long value) {
    this.createdAt = value;
  }

  /**
   * Creates a new NotificationRequest RecordBuilder.
   * @return A new NotificationRequest RecordBuilder
   */
  public static com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder newBuilder() {
    return new com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder();
  }

  /**
   * Creates a new NotificationRequest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new NotificationRequest RecordBuilder
   */
  public static com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder newBuilder(com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder other) {
    if (other == null) {
      return new com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder();
    } else {
      return new com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder(other);
    }
  }

  /**
   * Creates a new NotificationRequest RecordBuilder by copying an existing NotificationRequest instance.
   * @param other The existing instance to copy.
   * @return A new NotificationRequest RecordBuilder
   */
  public static com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder newBuilder(com.innowise.sivachenko.kafka.avro.NotificationRequest other) {
    if (other == null) {
      return new com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder();
    } else {
      return new com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder(other);
    }
  }

  /**
   * RecordBuilder for NotificationRequest instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NotificationRequest>
    implements org.apache.avro.data.RecordBuilder<NotificationRequest> {

    private java.lang.String email;
    private java.lang.String subject;
    private java.lang.String message;
    private long createdAt;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.email)) {
        this.email = data().deepCopy(fields()[0].schema(), other.email);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.subject)) {
        this.subject = data().deepCopy(fields()[1].schema(), other.subject);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.message)) {
        this.message = data().deepCopy(fields()[2].schema(), other.message);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[3].schema(), other.createdAt);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing NotificationRequest instance
     * @param other The existing instance to copy.
     */
    private Builder(com.innowise.sivachenko.kafka.avro.NotificationRequest other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.email)) {
        this.email = data().deepCopy(fields()[0].schema(), other.email);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.subject)) {
        this.subject = data().deepCopy(fields()[1].schema(), other.subject);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.message)) {
        this.message = data().deepCopy(fields()[2].schema(), other.message);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[3].schema(), other.createdAt);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.String getEmail() {
      return email;
    }


    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder setEmail(java.lang.String value) {
      validate(fields()[0], value);
      this.email = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder clearEmail() {
      email = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'subject' field.
      * @return The value.
      */
    public java.lang.String getSubject() {
      return subject;
    }


    /**
      * Sets the value of the 'subject' field.
      * @param value The value of 'subject'.
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder setSubject(java.lang.String value) {
      validate(fields()[1], value);
      this.subject = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'subject' field has been set.
      * @return True if the 'subject' field has been set, false otherwise.
      */
    public boolean hasSubject() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'subject' field.
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder clearSubject() {
      subject = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'message' field.
      * @return The value.
      */
    public java.lang.String getMessage() {
      return message;
    }


    /**
      * Sets the value of the 'message' field.
      * @param value The value of 'message'.
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder setMessage(java.lang.String value) {
      validate(fields()[2], value);
      this.message = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'message' field has been set.
      * @return True if the 'message' field has been set, false otherwise.
      */
    public boolean hasMessage() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'message' field.
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder clearMessage() {
      message = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public long getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder setCreatedAt(long value) {
      validate(fields()[3], value);
      this.createdAt = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public com.innowise.sivachenko.kafka.avro.NotificationRequest.Builder clearCreatedAt() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public NotificationRequest build() {
      try {
        NotificationRequest record = new NotificationRequest();
        record.email = fieldSetFlags()[0] ? this.email : (java.lang.String) defaultValue(fields()[0]);
        record.subject = fieldSetFlags()[1] ? this.subject : (java.lang.String) defaultValue(fields()[1]);
        record.message = fieldSetFlags()[2] ? this.message : (java.lang.String) defaultValue(fields()[2]);
        record.createdAt = fieldSetFlags()[3] ? this.createdAt : (java.lang.Long) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<NotificationRequest>
    WRITER$ = (org.apache.avro.io.DatumWriter<NotificationRequest>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<NotificationRequest>
    READER$ = (org.apache.avro.io.DatumReader<NotificationRequest>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.email);

    out.writeString(this.subject);

    out.writeString(this.message);

    out.writeLong(this.createdAt);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.email = in.readString();

      this.subject = in.readString();

      this.message = in.readString();

      this.createdAt = in.readLong();

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.email = in.readString();
          break;

        case 1:
          this.subject = in.readString();
          break;

        case 2:
          this.message = in.readString();
          break;

        case 3:
          this.createdAt = in.readLong();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










